<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- /images로 요청하면 /resources/images/위치에서 찾겠다는 의미 -->
	<!-- 이미지파일,css,js와 같은 정적리소스의 매핑을 등록 location은 실제 파일이 저장된 위치로
			 /WEB-INF부터 시작
	     mapping 이 파일들을 요청할 path정보( 사용자정의로 개발자가 요청하고 싶은 path명을 정의)
	 -->
	<!-- resources? -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- 이미지 -->
	<resources mapping="/images/**" location="/WEB-INF/static/images/" />
	<!-- css -->
	<resources mapping="/common/css/**" location="/WEB-INF/static/common/css/" />
	<!--  js -->
	<resources mapping="/common/js/**" location="/WEB-INF/static/common/js/" />
	<!--=========================== jsp파일의 위치를 이용해서 뷰정보를 만들어내는 ViewResolver =========================== -->
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>
	</beans:bean>
	<!-- =========================== tiles를 기반으로 뷰정보를 만드는 ViewResolver등록 =========================== -->
	<!-- 1. tiles설정파일을 등록하기 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/**/*-tiles.xml</beans:value><!-- -tiles.xml로만 있으면 다 되게끔 -->
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- 2. tiles기반으로 뷰를 만들 수 있도록 ViewResolver등록 -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<beans:property name="order" value="1"/>
	</beans:bean>
	
	
	<!-- ========================= 스프링 Jdbc연동을 위해 필요한 라이브러리 =========================== -->
	<!-- jdbc에서 DriverManager방식으로 커넥션을 생성해서 관리
	     => 요청이 들어오면 커넥션을 생성해서 넘겨주는 방식 -->
	<beans:bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
		<beans:property name="url" value="jdbc:mysql://127.0.0.1:3306/jdbc?serverTimezone=UTC"/>
		<beans:property name="username" value="exam"/>
		<beans:property name="password" value="exam"/>
	</beans:bean>
	<!-- 스프링에서 db연동할 수 있는 CLRUD메소드를 제공하는 클래스 -->
	<beans:bean id="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:constructor-arg ref="ds" />
	</beans:bean>
	
	<!-- 스프링컨테이너가 start될때 base-package에 명시된 패키지를 읽어서 컨트롤러를 객체로 생성 -->
	<!-- <context:component-scan base-package="com.multi.springmvc" /> -->
	<context:component-scan base-package="kr" />
	<context:component-scan base-package="main" />
	<context:component-scan base-package="test" />
	
</beans:beans>
